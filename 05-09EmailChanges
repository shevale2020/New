       public bool DeleteProcessingSummaryMessage(Dictionary<InboundProcessingSummary, List<string>> IPSSuccess, Dictionary<InboundProcessingSummary, List<string>> IPSFail, Dictionary<OutboundFilesSummary, List<string>> OFSSuccess, Dictionary<OutboundFilesSummary, List<string>> OFSFail, Dictionary<OutboundProcessingSummary, List<string>> OPSSuccess, Dictionary<OutboundProcessingSummary, List<string>> OPSFail)
        {
            try
            {
             lock (mailLock)
                {
                        //Create email body
                        _sbBody.AppendLine("<p>Dear <strong>Team</strong>,</p>");
                        _sbBody.AppendLine("<p>Following is Delete summary of Inbound, Outbound and Outbound File</p>");

                        //Inbound 
                        _sbBody.AppendLine("<br>");
                        _sbBody.AppendLine("<p><strong>Inbound File Processing  Summary</strong>:</p>");
                        _sbBody.AppendLine("<table>");
                        var Entitys = string.Join(",<br>", IPSSuccess.Select(x => x.Key.EntityID).Distinct());
                            List<string> sccessFile = new List<string>();
                            foreach (var item in IPSSuccess)
                            {
                                sccessFile.AddRange(item.Value);
                                
                            }
                        
                            List<string> failFile = new List<string>();
                            foreach (var item in IPSFail)
                            {
                                failFile.AddRange(item.Value);
                                
                            }

                         var failIPSList = string.Join(",<br>", failFile.Distinct());
                          var successIPSList =  string.Join(",<br>", sccessFile.Distinct());
                        _sbBody.AppendLine("<tr><th>Entity</th><th>No of Files Delete</th><th>No of Files Problem Delete</th><th>Successfully Deleted  FileName</th><th>Failed In deleting FileName</th></tr>");
                        _sbBody.AppendFormat("<tr><td>{0}<td>", Entitys);
                        _sbBody.AppendFormat("<td>{0}</td>", sccessFile.Distinct().Count().ToString());
                        _sbBody.AppendFormat("<td>{0}</td>", failFile.Count.ToString());
                        _sbBody.AppendFormat("<td>{0}", successIPSList);
                        _sbBody.AppendFormat("<td>{0}", failIPSList);
                        _sbBody.AppendLine("</tr>");
                        _sbBody.AppendLine("</table>");
                        _sbBody.AppendLine("<br>");

                        //Outbound File 
                            var ofsEntitys = string.Join(",<br>", OFSSuccess.Select(x => x.Key.EntityID).Distinct());
                      List<string> ofsSccessFile = new List<string>();
                            foreach (var item in OFSSuccess)
                            {
                                ofsSccessFile.AddRange(item.Value);
                                
                            }
                        
                            List<string> ofsFailFile = new List<string>();
                            foreach (var item in OFSFail)
                            {
                                ofsFailFile.AddRange(item.Value);
                                
                            }

                         var failOFSList = string.Join(",<br>", ofsFailFile.Distinct());
                          var successOFSList =  string.Join(",<br>", ofsSccessFile.Distinct());
                
                        _sbBody.AppendLine("<br>");
                        _sbBody.AppendLine("<p><strong>Outbound File Processing Summary</strong>:</p>");
                        _sbBody.AppendLine("<table>");
                          _sbBody.AppendLine("<tr><th>Entity</th><th>No of Files Delete</th><th>No of Files Problem Delete</th><th>Successfully Deleted  FileName</th><th>Failed In deleting FileName</th></tr>");
                        _sbBody.AppendFormat("<tr><td>{0}<td>", ofsEntitys);
                        _sbBody.AppendFormat("<td>{0}</td>", ofsSccessFile.Distinct().Count().ToString());
                        _sbBody.AppendFormat("<td>{0}</td>", ofsFailFile.Count.ToString());
                        _sbBody.AppendFormat("<td>{0}", failOFSList);
                        _sbBody.AppendFormat("<td>{0}", successOFSList);
                        _sbBody.AppendLine("</tr>");
                        _sbBody.AppendLine("</table>");
                        _sbBody.AppendLine("<br>");

                        //Outbound 
                            var opsEntitys = string.Join(",<br>", OPSSuccess.Select(x => x.Key.EntityID).Distinct());

                      List<string> opsSccessFile = new List<string>();
                            foreach (var item in OPSSuccess)
                            {
                                opsSccessFile.AddRange(item.Value);
                                
                            }
                        
                            List<string> opsFailFile = new List<string>();
                            foreach (var item in OPSFail)
                            {
                                opsFailFile.AddRange(item.Value);
                                
                            }

                         var failOPSList = string.Join(",<br>", opsFailFile.Distinct());
                          var successOPSList =  string.Join(",<br>", opsSccessFile.Distinct());
                        _sbBody.AppendLine("<br>");
                        _sbBody.AppendLine("<p><strong>Outbound File Processing Summary</strong>:</p>");
                        _sbBody.AppendLine("<table>");
                       _sbBody.AppendLine("<tr><th>Entity</th><th>No of Files Delete</th><th>No of Files Problem Delete</th><th>Successfully Deleted  FileName</th><th>Failed In deleting FileName</th></tr>");
                        _sbBody.AppendFormat("<tr><td>{0}<td>", opsEntitys);
                        _sbBody.AppendFormat("<td>{0}</td>", opsSccessFile.Distinct().Count().ToString());
                        _sbBody.AppendFormat("<td>{0}</td>", opsFailFile.Count.ToString());
                        _sbBody.AppendFormat("<td>{0}", failOPSList);
                        _sbBody.AppendFormat("<td>{0}", successOPSList);
                        _sbBody.AppendLine("</tr>");
                        _sbBody.AppendLine("</table>");
                        _sbBody.AppendLine("<br>");

                        //Total Count
                        _sbBody.AppendLine(_emailFooter);
                   //     _message.Subject = $"Delete Processing summary Date:{DateTime.Now:MM/dd/yyyy} , Inbound Success:{IPSSuccess.Count} ,Inbound Fail:{IPSFail.Count} , Outbound File Success:{OFSSuccess.Count},Outbound File Fail:{OFSFail.Count}, Outbound Success:{OPSSuccess.Count}, Outbound Fail:{OPSFail.Count}";

                        //Set message field values                   
                        _message.BodyText = _sbBody.ToString();
                        _message.EmailType = "SummaryEmail";
                        //_message.EmailSubType = summaryType;
                        _message.CreatedBy = "Gateway Monitor";
                        //Save message
                        dbContext.SEEmailMessages.Add(_message);
                        dbContext.SaveChanges();
                        _message.To = string.Format("{0}", Globals.MailToInfo);

                        return true;
                }
            }
            catch (Exception ex)
            {
                Globals.DBLogger.Error(string.Format("DeleteProcessingSummaryMessage: Error while Sendmail {0}", ex.Message), ex);
                return false;
            }
        }


     
