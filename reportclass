using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Wns.Sdg.Product.FAR.DataAccessLayer.Interface;
using Wns.Sdg.Product.FAR.Shared;

namespace Wns.Sdg.Product.FAR.DataAccessLayer.Implementation
{
    public class ExceptionSummaryDal : IExceptionSummaryDal
    {
        public ExceptionSummaryEntity GetMasterDetails(ExceptionSummaryEntity objExpSummary)
        {
            var returnExpSummaryObj = new ExceptionSummaryEntity();

            DataSet ds = new DataSet();
            string SpName = "Proc_GetExceptionSummary";

            ds = SqlHelper.ExecuteDataset(Utility.ConnectionString, CommandType.StoredProcedure, SpName);

            if (ds != null)
            {
                if (ds.Tables.Count > 0)
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        returnExpSummaryObj.dtMasterTable = ds.Tables[0];
                    }
                }
            }
            return returnExpSummaryObj;
        }

        public ExceptionSummaryEntity GetDetailsForExport(ExceptionSummaryEntity objExpSummary)
        {
            var returnExpSummaryObj = new ExceptionSummaryEntity();

            DataSet ds = new DataSet();
            string SpName = "Proc_GetExceptionDetailsForExport";
            SqlParameter[] SqlParams = null;

            SqlParams = new SqlParameter[2];
            SqlParams[0] = new SqlParameter("@ExceptionType", SqlDbType.VarChar);
            SqlParams[0].Value = objExpSummary.ExceptionType;
            SqlParams[1] = new SqlParameter("@Location", SqlDbType.NVarChar);
            if (objExpSummary.Location==null)// Check added by Rizwan - 20-Dec-2018
                SqlParams[1].Value = DBNull.Value;
            else
            SqlParams[1].Value = objExpSummary.Location.Trim();


            ds = SqlHelper.ExecuteDataset(Utility.ConnectionString, SpName, SqlParams);

            if (ds != null)
            {
                if (ds.Tables.Count > 0)
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        returnExpSummaryObj.dtTableToExport = ds.Tables[0];
                    }
                }
            }
            return returnExpSummaryObj;
        }
    }
}
