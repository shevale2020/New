 
                    if (infoListForIPS != null)
                    {
                        foreach (var infoIPS in infoListForIPS)
                        {
                            var ForRemoveinfoIPS = infoIPS;
                            try
                            {

                                var LocalSourceFileName = Path.GetFileName(infoIPS.LocalSourceFilePath);
                                var LocalSourceFilePath = Path.GetDirectoryName(infoIPS.LocalSourceFilePath);
                                //get all Local files from Direcotory
                                string[] AllLocalSourceFiles = System.IO.Directory.GetFiles(LocalSourceFilePath, "'"+ LocalSourceFileName + "'.*");
                                foreach (string f in AllLocalSourceFiles)
                                {
                                    try
                                    {
                                        infoIPS.LocalSourceFilePath = f;
                                        System.IO.File.Delete(f);
                                        SuccessIPS.Add(infoIPS);
                                    }
                                    catch
                                    {
                                        FailIPS.Add(infoIPS);
                                    }

                                }
                                //delete that file on SFTP Directory
                                SFTPHelper.DeleteSFTPFile(infoIPS.LocalSuccessFilePath);

                                var LocalSuccessFileName = Path.GetFileName(infoIPS.LocalSuccessFilePath);
                                var LocalSuccessFilePath = Path.GetDirectoryName(infoIPS.LocalSuccessFilePath);
                                //get all Local files from Direcotory
                                string[] AllLocalSuccessFiles = System.IO.Directory.GetFiles(LocalSuccessFilePath, "'" + LocalSuccessFileName + "'.*");
                                foreach (string f in AllLocalSuccessFiles)
                                {
                                    try
                                    {
                                        infoIPS.LocalSuccessFilePath = f;
                                        System.IO.File.Delete(f);
                                    }
                                    catch
                                    {
                                        FailIPS.Add(infoIPS);
                                    }

                                }

                                //delete that file on SFTP Directory
                                SFTPHelper.DeleteSFTPFile(infoIPS.SFTPSuccessFilePath);

                                var LocalFailedFileName = Path.GetFileName(infoIPS.LocalFailedFilePath);
                                var LocalFailedFilePath = Path.GetDirectoryName(infoIPS.LocalFailedFilePath);
                                //get all Local files from Direcotory
                                string[] AllLocalFailedFiles = System.IO.Directory.GetFiles(LocalFailedFilePath, "'" + LocalFailedFileName + "'.*");
                                foreach (string f in AllLocalFailedFiles)
                                {
                                    try
                                    {
                                        infoIPS.LocalFailedFilePath = f;
                                        System.IO.File.Delete(f);
                                    }
                                    catch
                                    {
                                        FailIPS.Add(infoIPS);
                                    }

                                }
                            }
                            catch (IOException)
                            {
                              
                            }
                            //delete that file on SFTP Directory
                            SFTPHelper.DeleteSFTPFile(infoIPS.SFTPFailedFilePath);
                            //delete Data From Database
                            dbContext.InboundProcessingSummaries.Remove(ForRemoveinfoIPS);
                            dbContext.SaveChanges();

                        }
                    }
